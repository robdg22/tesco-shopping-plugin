(()=>{"use strict";({383:function(){var e=this&&this.__awaiter||function(e,n,t,o){return new(t||(t=Promise))((function(r,s){function a(e){try{u(o.next(e))}catch(e){s(e)}}function i(e){try{u(o.throw(e))}catch(e){s(e)}}function u(e){var n;e.done?r(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,i)}u((o=o.apply(e,n||[])).next())}))};function n(n){return e(this,arguments,void 0,(function*(e,n={}){const t=yield fetch("https://tesco-proxy-b4fena2ys-robdgraham-gmailcoms-projects.vercel.app/api/tesco",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:e,variables:n})});if(!t.ok)throw new Error(`API request failed with status ${t.status}`);return t.json()}))}figma.showUI(__html__,{width:400,height:600}),figma.ui.onmessage=t=>e(void 0,void 0,void 0,(function*(){console.log("Received message:",t);try{switch(t.type){case"searchProducts":yield function(t){return e(this,void 0,void 0,(function*(){if(!(null==t?void 0:t.query))return void figma.ui.postMessage({type:"error",error:"Search query is required"});try{const e=yield n("\n    query SearchProducts($query: String!, $count: Int, $offset: Int) {\n      search(query: $query, count: $count, offset: $offset) {\n        pageInformation: info {\n          totalCount: total\n          pageNo: page\n          count\n        }\n        productItems: products {\n          id\n          baseProductId\n          title\n          brandName\n          shortDescription\n          defaultImageUrl\n          media {\n            defaultImage {\n              url\n              aspectRatio\n            }\n            images {\n              url\n              aspectRatio\n            }\n          }\n          isNew\n          price {\n            price: actual\n            unitPrice\n            unitOfMeasure\n          }\n          promotions {\n            promotionId: id\n            promotionType\n            startDate\n            endDate\n            offerText: description\n          }\n          reviews {\n            stats {\n              noOfReviews\n              overallRating\n              overallRatingRange\n            }\n          }\n        }\n      }\n    }\n  ",{query:t.query,count:t.count||20,offset:t.offset||0});figma.ui.postMessage({type:"searchProductsResponse",data:e})}catch(e){figma.ui.postMessage({type:"error",error:`Search failed: ${e instanceof Error?e.message:"Unknown error"}`})}}))}(t.payload);break;case"getTaxonomy":yield function(){return e(this,void 0,void 0,(function*(){try{const e=yield n("\n    query TaxonomySuperDepts($storeId: ID, $style: String) {\n      taxonomy(storeId: $storeId) {\n        id\n        name\n        label\n        images(style: $style) {\n          style\n          images {\n            type\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n  ",{storeId:"3060",style:"rounded"});if(e.data&&e.data.taxonomy){const n=e.data.taxonomy.filter((e=>"superdepartment"===e.label||"TaxonomyItemType"===e.__typename));figma.ui.postMessage({type:"getTaxonomyResponse",data:Object.assign(Object.assign({},e),{data:Object.assign(Object.assign({},e.data),{taxonomy:n})})})}else figma.ui.postMessage({type:"getTaxonomyResponse",data:e})}catch(e){figma.ui.postMessage({type:"error",error:`Failed to load categories: ${e instanceof Error?e.message:"Unknown error"}`})}}))}();break;case"getCategoryProducts":yield function(t){return e(this,void 0,void 0,(function*(){if(!(null==t?void 0:t.categoryId))return void figma.ui.postMessage({type:"error",error:"Category ID is required"});try{const e=yield n("\n    query GetCategoryProducts($categoryId: ID, $count: Int) {\n      category(categoryId: $categoryId, count: $count) {\n        pageInformation: info {\n          totalCount: total\n          pageNo: page\n          count\n        }\n        productItems: products {\n          id\n          baseProductId\n          title\n          brandName\n          shortDescription\n          defaultImageUrl\n          price {\n            price: actual\n            unitPrice\n            unitOfMeasure\n          }\n        }\n      }\n    }\n  ",{categoryId:t.categoryId,count:t.count||10});figma.ui.postMessage({type:"getCategoryProductsResponse",data:e})}catch(e){figma.ui.postMessage({type:"error",error:`Failed to load category products: ${e instanceof Error?e.message:"Unknown error"}`})}}))}(t.payload);break;case"searchWithSuggestions":yield function(t){return e(this,void 0,void 0,(function*(){if(!(null==t?void 0:t.query))return void figma.ui.postMessage({type:"error",error:"Search query is required"});try{const e={query:t.query,suggestionsCount:t.suggestionsCount||10};console.log("Making search suggestions request with variables:",e);const o=yield n("\n    query SearchWithSuggestions(\n      $query: String!\n      $suggestionsCount: Int\n      $params: BrowseSearchConfig\n      $configs: [ConfigArgType]\n    ) {\n      search(\n        query: $query\n        config: $params\n        configs: $configs\n      ) {\n        suggestions(suggestionsCount: $suggestionsCount) {\n          searchTerms {\n            suggestionQuery\n          }\n          info {\n            count\n            query\n          }\n        }\n      }\n    }\n  ",e);console.log("Search suggestions API response:",o),figma.ui.postMessage({type:"searchWithSuggestionsResponse",data:o})}catch(e){figma.ui.postMessage({type:"error",error:`Failed to search with suggestions: ${e instanceof Error?e.message:"Unknown error"}`})}}))}(t.payload);break;default:figma.ui.postMessage({type:"error",error:"Unknown message type"})}}catch(e){console.error("Plugin error:",e),figma.ui.postMessage({type:"error",error:e instanceof Error?e.message:"Unknown error"})}}))}})[383]()})();