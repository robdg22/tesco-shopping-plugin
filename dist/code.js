(()=>{"use strict";({383:function(){var e=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{c(r.next(e))}catch(e){o(e)}}function i(e){try{c(r.throw(e))}catch(e){o(e)}}function c(e){var n;e.done?a(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(s,i)}c((r=r.apply(e,n||[])).next())}))};function n(n){return e(this,arguments,void 0,(function*(e,n={}){const t=yield fetch("https://tesco-proxy-b4fena2ys-robdgraham-gmailcoms-projects.vercel.app/api/tesco",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:e,variables:n})});if(!t.ok)throw new Error(`API request failed with status ${t.status}`);return t.json()}))}figma.showUI(__html__,{width:400,height:600}),figma.ui.onmessage=t=>e(void 0,void 0,void 0,(function*(){console.log("Received message:",t);try{switch(t.type){case"searchProducts":yield function(t){return e(this,void 0,void 0,(function*(){if(!(null==t?void 0:t.query))return void figma.ui.postMessage({type:"error",error:"Search query is required"});try{const e=yield n("\n    query SearchProducts($query: String!, $count: Int, $offset: Int) {\n      search(query: $query, count: $count, offset: $offset) {\n        pageInformation: info {\n          totalCount: total\n          pageNo: page\n          count\n        }\n        productItems: products {\n          id\n          baseProductId\n          title\n          brandName\n          shortDescription\n          defaultImageUrl\n          media {\n            defaultImage {\n              url\n              aspectRatio\n            }\n            images {\n              url\n              aspectRatio\n            }\n          }\n          isNew\n          price {\n            price: actual\n            unitPrice\n            unitOfMeasure\n          }\n          promotions {\n            promotionId: id\n            promotionType\n            startDate\n            endDate\n            offerText: description\n          }\n          reviews {\n            stats {\n              noOfReviews\n              overallRating\n              overallRatingRange\n            }\n          }\n        }\n      }\n    }\n  ",{query:t.query,count:t.count||20,offset:t.offset||0});figma.ui.postMessage({type:"searchProductsResponse",data:e})}catch(e){figma.ui.postMessage({type:"error",error:`Search failed: ${e instanceof Error?e.message:"Unknown error"}`})}}))}(t.payload);break;case"getTaxonomy":yield function(){return e(this,void 0,void 0,(function*(){try{const e=yield n("\n    query TaxonomySuperDepts($storeId: ID, $style: String) {\n      taxonomy(storeId: $storeId) {\n        id\n        name\n        label\n        images(style: $style) {\n          style\n          images {\n            type\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n  ",{storeId:"3060",style:"rounded"});if(e.data&&e.data.taxonomy){const n=e.data.taxonomy.filter((e=>"superdepartment"===e.label||"TaxonomyItemType"===e.__typename));figma.ui.postMessage({type:"getTaxonomyResponse",data:Object.assign(Object.assign({},e),{data:Object.assign(Object.assign({},e.data),{taxonomy:n})})})}else figma.ui.postMessage({type:"getTaxonomyResponse",data:e})}catch(e){figma.ui.postMessage({type:"error",error:`Failed to load categories: ${e instanceof Error?e.message:"Unknown error"}`})}}))}();break;case"getCategoryProducts":yield function(t){return e(this,void 0,void 0,(function*(){if(!(null==t?void 0:t.categoryId))return void figma.ui.postMessage({type:"error",error:"Category ID is required"});try{const e=yield n("\n    query GetCategoryProducts(\n      $facet: ID\n      $page: Int\n      $count: Int\n      $sortBy: String\n      $offset: Int\n      $superDepartment: String\n      $department: String\n      $aisle: String\n      $shelf: String\n      $offers: Boolean\n      $new: Boolean\n      $favourites: Boolean\n      $brand: String\n      $brands: [String]\n      $dietary: String\n      $categoryId: ID\n      $pageName: String\n    ) {\n      category(\n        page: $page\n        count: $count\n        sortBy: $sortBy\n        offset: $offset\n        facet: $facet\n        superDepartment: $superDepartment\n        department: $department\n        aisle: $aisle\n        shelf: $shelf\n        offers: $offers\n        new: $new\n        favourites: $favourites\n        brand: $brand\n        brands: $brands\n        dietary: $dietary\n        categoryId: $categoryId\n      ) {\n        pageInformation: info {\n          ...PageInformation\n        }\n        productItems: products {\n          ...ProductItem\n        }\n        facetLists: facetGroups {\n          ...FacetLists\n        }\n        options {\n          sortBy\n        }\n      }\n    }\n\n    fragment PageInformation on ListInfoInterface {\n      totalCount: total\n      pageNo: page\n      count\n      pageSize\n      offset\n    }\n\n    fragment ProductItem on ProductInterface {\n      id\n      baseProductId\n      title\n      brandName\n      shortDescription\n      defaultImageUrl\n      media {\n        defaultImage {\n          url\n          aspectRatio\n        }\n        images {\n          url\n          aspectRatio\n        }\n      }\n      badgeDetails(pageName: $pageName) {\n        badges\n        subText\n      }\n      superDepartmentId\n      superDepartmentName\n      departmentId\n      departmentName\n      aisleId\n      aisleName\n      shelfId\n      shelfName\n      displayType\n      productType\n      averageWeight\n      bulkBuyLimit\n      maxQuantityAllowed: bulkBuyLimit\n      groupBulkBuyLimit\n      bulkBuyLimitMessage\n      bulkBuyLimitGroupId\n      timeRestrictedDelivery\n      restrictedDelivery\n      isForSale\n      isNew\n      isRestrictedOrderAmendment\n      status\n      maxWeight\n      minWeight\n      increment\n      catchWeightList {\n        price\n        weight\n        default\n      }\n      restrictedDeliveryTime {\n        day\n        startDateTime\n        endDateTime\n        message\n      }\n      restrictedDeliveryDate {\n        startDate\n        endDate\n        leadTimeValue\n        message\n      }\n      price {\n        price: actual\n        unitPrice\n        unitOfMeasure\n      }\n      promotions {\n        promotionId: id\n        promotionType\n        startDate\n        endDate\n        offerText: description\n      }\n      reviews {\n        stats {\n          noOfReviews\n          overallRating\n          overallRatingRange\n        }\n      }\n    }\n\n    fragment FacetLists on ProductListFacetGroupInterface {\n      categoryId\n      category\n      facets {\n        facetId: id\n        facetName: name\n        binCount: count\n        isSelected: selected\n      }\n    }\n  ",{categoryId:t.categoryId,pageName:"browse",count:t.count||20,offset:t.offset||0});figma.ui.postMessage({type:"getCategoryProductsResponse",data:e})}catch(e){figma.ui.postMessage({type:"error",error:`Failed to load category products: ${e instanceof Error?e.message:"Unknown error"}`})}}))}(t.payload);break;case"getCategoryChildren":yield function(t){return e(this,void 0,void 0,(function*(){if(!(null==t?void 0:t.categoryId))return void figma.ui.postMessage({type:"error",error:"Category ID is required"});try{const e=yield n("\n    query GetCategoryChildren($categoryId: String, $storeId: ID) {\n      taxonomy(storeId: $storeId, categoryId: $categoryId) {\n        id\n        name\n        label\n        pageType\n        images {\n          style\n          images {\n            type\n            url\n            __typename\n          }\n          __typename\n        }\n        children {\n          id\n          name\n          label\n          pageType\n          images {\n            style\n            images {\n              type\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n  ",{categoryId:t.categoryId,storeId:"3060"});figma.ui.postMessage({type:"getCategoryChildrenResponse",data:e})}catch(e){figma.ui.postMessage({type:"error",error:`Failed to load category children: ${e instanceof Error?e.message:"Unknown error"}`})}}))}(t.payload);break;case"searchWithSuggestions":yield function(t){return e(this,void 0,void 0,(function*(){if(!(null==t?void 0:t.query))return void figma.ui.postMessage({type:"error",error:"Search query is required"});try{const e={query:t.query,suggestionsCount:t.suggestionsCount||10};console.log("Making search suggestions request with variables:",e);const r=yield n("\n    query SearchWithSuggestions(\n      $query: String!\n      $suggestionsCount: Int\n      $params: BrowseSearchConfig\n      $configs: [ConfigArgType]\n    ) {\n      search(\n        query: $query\n        config: $params\n        configs: $configs\n      ) {\n        suggestions(suggestionsCount: $suggestionsCount) {\n          searchTerms {\n            suggestionQuery\n          }\n          info {\n            count\n            query\n          }\n        }\n      }\n    }\n  ",e);console.log("Search suggestions API response:",r),figma.ui.postMessage({type:"searchWithSuggestionsResponse",data:r})}catch(e){figma.ui.postMessage({type:"error",error:`Failed to search with suggestions: ${e instanceof Error?e.message:"Unknown error"}`})}}))}(t.payload);break;case"loadRecentSearches":yield function(){return e(this,void 0,void 0,(function*(){try{const e=yield figma.clientStorage.getAsync("tesco-recent-searches");figma.ui.postMessage({type:"recentSearchesLoaded",data:e||[]})}catch(e){console.error("Failed to load recent searches:",e),figma.ui.postMessage({type:"recentSearchesLoaded",data:[]})}}))}();break;case"saveRecentSearches":yield function(n){return e(this,void 0,void 0,(function*(){try{(null==n?void 0:n.searches)&&(yield figma.clientStorage.setAsync("tesco-recent-searches",n.searches),console.log("Recent searches saved:",n.searches))}catch(e){console.error("Failed to save recent searches:",e)}}))}(t.payload);break;default:figma.ui.postMessage({type:"error",error:"Unknown message type"})}}catch(e){console.error("Plugin error:",e),figma.ui.postMessage({type:"error",error:e instanceof Error?e.message:"Unknown error"})}}))}})[383]()})();